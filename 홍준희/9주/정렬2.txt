카운팅 소트

가장 쉽다

각 수의등장횟수 
+1증가시켜 센다

수의범위가 작을때만 사용가능

라딕스 : 자릿수로???

리스트 생성후에 수 넣기

1의 자리로 각 리스트에 넣고 재배열

카운팅과 비슷하데 다름

1의 자리순으로 재배열
순위같으면 원래 순서유지

재배열된거 10의자리로 재배열

100의자리로 재배열

d자리면 d번 카운팅 소트한다

라딕스 소트 필요 리스트 개수 많다

공간낭비 심하다
stl없으면 힘ㄷ르고
있으면 걍sort함ㅅ로 

구현 굳이 필요없다


정렬1과 정렬2의 차이?
비교소트, 논비교소트
원소간크기비교 있고 / 없다

코테에서 정렬짜고 있으면 바보다
sort함수써서 하기

앞에 닫힌관ㄹ호 뒤 열린괄호
하지만 stable가 아니다
필요하면 stalble_sort로 쓰기

비교함수 작성시
같을때는 false로 반환
true면 오류난다 (런타임에러)


정렬로 시간복잡도 단축???

등장횟수 n*2이니 
등장횟수 인덱스로 등장횟수?
수의 범위 너무 크면 
정렬하고 나면 문제 더 쉽게 해결가능




